scalar GraphQLDate

enum StatusType {
  New
  Assigned
  Fixed
  Closed
}

"Toned down Issue, used as inputs, without server generated values."
input IssueInputs {
  title: String!,
  "Optional, if not supplied, will be set to 'New'"
  status: StatusType = New
  owner: String
  effort: Int
  due: GraphQLDate
  description: String
}

"""Inputs for issueUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""
input IssueUpdateInputs {
  title: String
  status: StatusType
  owner: String
  effort: Int
  due: GraphQLDate
  description: String
}

type Issue {
  _id: ID!
  id: Int!
  title: String!
  status: StatusType!
  owner: String
  effort: Int
  created: GraphQLDate!
  due: GraphQLDate
  description: String
}

type IssueCounts {
  owner: String!
  New: Int
  Assigned: Int
  Fixed: Int
  Closed: Int
}

type Query {
  about: String!
  issue(id: Int!): Issue!
  issueList(
    status: StatusType
    effortMin: Int
    effortMax: Int
  ): [Issue!]!
  issueCounts (
    status: StatusType
    effortMin: Int
    effortMax: Int
  ): [IssueCounts!]!
}

type Mutation {
  setAboutMessage(message: String!): String
  issueAdd(issue: IssueInputs!): Issue!
  issueUpdate(id: Int!, changes: IssueUpdateInputs!): Issue!
  issueDelete(id: Int!): Boolean!
}
